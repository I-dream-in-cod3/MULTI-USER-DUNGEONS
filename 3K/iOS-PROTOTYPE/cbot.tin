#nop

#variable {huntmode} {"on"} ;

#ALIAS {start} {#variable {huntmode} {"on"};looky;retick;#showme {huntmode is now turned:$huntmode} };
#ALIAS {stop} {

#if {$huntmode == "on"}
{
#variable {huntmode} {"off"};
untick;
#showme {huntmode is now turned:$huntmode};
afk;
}

#if {$huntmode == "off"}
{
#showme {huntmode is already turned $huntmode};
}


};
#ALIAS {mm} {start};
#ALIAS {mmm} {\mm};

#ACTION {The Void (out)}
{
#variable {InChess} {0};
stop;
out;
} 

#nop {
#nop it is supposed to be stop;out;#zap;
#nop zap does not work here for some reason - I think it gets eaten up by the triggers to leave COT;
#nop potential issue: exiting the void returns to the dungeon and attacks the first mob;
}

#ACTION {A Light Square (n,w)}
{
    n ;
    n ;
    n ;
    n ;
    n ;
    n ;
    n ;
    w ;
    w ;
    w ;
    w ;
    w ;
    w ;
    w ;
    kill human
} {1}

#ACTION {A Light Square (w,n)}
{
    n ;
    n ;
    n ;
    n ;
    n ;
    n ;
    n ;
    w ;
    w ;
    w ;
    w ;
    w ;
    w ;
    w ;
    kill human
} {1}

#ACTION {A {.*} Square}
{
    #variable {InChess} {1}
}

#ACTION {CF[5/}
{
    relinquish
}

#ACTION {PP[2}
{
    vv;
    vv;
    vv ;
    vv;
    vv;
    vv ;
    vv;
    vv;
    vv ;
    vv;
    vv;
    vv ;
    morph ;
    biocheck
}

#ACTION {ST[2}
{
    vv;
    vv;
    vv;
    vv;
    vv;
    vv;
    vv;
    morph ;
    biocheck
}

#ACTION {The Center of Town}
{
    chess
}

#ACTION {The chaotic forces seeking control of you begin to wane, your control}
{
    relinquish
}

#ACTION {The exit '%1' is closest to town\.}
{
    %1
}

#ACTION {There is no human here\.}
{

#if {$huntmode == "on"} {east;#delay {2} {kill human};} {#showme huntmode is $huntmode}; 
#nop replaced flow kill human ;

} {9}

#ACTION {There is one obvious exit: jump}
{
    jump
}

#ACTION {You cannot go east\.}
{
    w ;
    w ;
    w ;
    w ;
    w ;
    w ;
    w ;
    s
}

#ACTION {You have {.*}\% of your max bioplasm in storage.}
{
    #variable {bioplasm} {%1};
    #showme {$bioplasm};
    #if {%1 < 10}
    {
        morph tankfo
    };
    #else
    {
        #if {%1 >= 30}
        {
            morph myfo
        }
    }
}

#ACTION {cracks open, and out crawls a}
{
    say Help me in battle!;
    = assist
}



#ALIAS {nm}
{
#system tmux detach;
}

{
    #session 3K 3k.org 3000;
    arx;
    #textin localpass;
}

#ALIAS {chess}
{
    ;
    n;
    w;
    n ;
    n ;
    e;
    n ;
    enter ;
    e ;
    climb pipe ;
    w ;
    w ;
    w ;
    n ;
    n ;
    n ;
    n ;
    kill human
}

#ALIAS {chesse}
{
    n ;
    w ;
    n ;
    w ;
    n ;
    w ;
    n ;
    w ;
    n ;
    w ;
    n ;
    w ;
    n ;
    w;
    s ;
    s ;
    s ;
    s ;
    e ;
    e ;
    e ;
    slide;
    w;
    vortex ;
    s;
    w;
    s;
    s;
    e;
    s
}

#ALIAS {quit}
{
		stop;
    #unACTION {The Center of Town};
	  chessr;
    #nop east;
	  #nop go east to make sure not in combat - dont delete save comment for later;
    chesse;
		nn;
		deposit all;
		#delay {2} {\quit};

}

#ALIAS {chessr}
{
    7w7n
}

#ALIAS {chi}
{
    7w6e7s
}

#ALIAS {cmo}
{
    = morph %1
}

#nop classes go here 



#ALIAS {leet}
{
    #class leet kill;
    #class leet read leetclass.tin
}

#ALIAS {color}
{
    #class color kill;
    #class color read color.tin
}

#ALIAS {chessbank}
{
    #class chessbank kill;
    #class chessbank read ChessBankClass.tin;
}

#ALIAS {fo}
{
    form;
    forms
}



#ALIAS {lol}
{
    say lol
}

#ALIAS {looky}
{
    look;
    #nop tell arx $InChess;
    #showme { InChess = $InChess};
    #if {$InChess == 1}
    {
     retick;#variable {huntmode} {"on"};kill human;
    }
}

#nop form to focus on when you have healing resources like bioplasm
#ALIAS {myfo}
{
    nickname myfo %1;
    biocheck
}

#nop form for tanking and collecting bioplasm / healing
#ALIAS {tankfo}
{
    nickname tankfo %1;
    biocheck
}

#ALIAS {nic}
{
    nickname %1 %2
}

#ALIAS {rnic}
{
    rnickname %1
}

#ALIAS {sp}
{
    #split;
    
}

#ALIAS {write}
{
    #write cbot.tin;
    #showme saved to cbot.tin
}

#ALIAS {x}
{
    #zap
}


#CONFIG {AUTO TAB} {5000}
#CONFIG {BUFFER SIZE} {10000}
#CONFIG {CHARSET} {BIG-5}
#CONFIG {COLOR MODE} {TRUE}
#CONFIG {COLOR PATCH} {OFF}
#CONFIG {COMMAND COLOR} {\e[0;37m}
#CONFIG {COMMAND ECHO} {ON}
#CONFIG {CONNECT RETRY} {0.0}
#CONFIG {HISTORY SIZE} {1000}
#CONFIG {LOG MODE} {RAW}
#CONFIG {MOUSE} {ON}
#CONFIG {PACKET PATCH} {0.50}
#CONFIG {RANDOM SEED} {4002480189}
#CONFIG {REPEAT CHAR} {z}
#CONFIG {REPEAT ENTER} {ON}
#CONFIG {SCREEN READER} {OFF}
#CONFIG {SCROLL LOCK} {ON}
#CONFIG {SPEEDWALK} {ON}
#CONFIG {TAB WIDTH} {8}
#CONFIG {TELNET} {ON}
#CONFIG {TINTIN CHAR} {#}
#CONFIG {VERBATIM} {OFF}
#CONFIG {VERBATIM CHAR} {/}
#CONFIG {VERBOSE} {OFF}
#CONFIG {WORDWRAP} {ON}

#EVENT {PROGRAM START}
{
    #variable {InChess} {0};
    #split;
    #session 3K 3k.org 3000;
    arx;
    #textin localpass;
    biocheck;
    ktrig ON;
    ktrig bioextract/swoop coins/say nice knowin ya chump!/biocheck/look/flow kill human;
    look;
    morph tankfo;
    biocheck;
    #nop biocheck + change to non tank if safe see bc #nop above #nop retrace;
    #nop above biocheck does not do anything with empty plasm container; 
    dissipate on;
    aug str;
    thermotaxis heat;
    adrenalize on;
    #delay {2} {clone};
    = assist;
    #nop color;
    #delay {4} {looky};
    tellhist;
}

#EVENT {SESSION DISCONNECTED}
{
#END
}


#EVENT {SCROLLED MOUSE WHEEL DOWN}
{
    #buffer down 3
}

#EVENT {SCROLLED MOUSE WHEEL UP}
{
    #buffer up 3
}


#GAG {Cells blacken and die around your superheated regions!}
#GAG {The searing heat that you are generating is damaging your cells!}


 #HIGHLIGHT {^You hit{|r} %1} {light red underscore} {5} ;
#Nop #HIGHLIGHT {^You hit{|r} %1} {silver underscore} {5} ;


#HIGHLIGHT {^You attack} {Red blink underscore} {5}
#HIGHLIGHT {Tell history:} {Yellow reverse underscore} {5} 
#HIGHLIGHT {No tell history.} {Reverse blink underscore} {5}
#highlight {{[0-9][0-9]:[0-9][0-9]}} {yellow} ; #nop highlight each timestamp for tells

#nop alias to undo highlights ->> be more retro ;
#alias {retro}
{
ansi off;
#unhighlight {{.*}};
#HIGHLIGHT {Tell history:} {Yellow reverse underscore} {5} ;
#highlight {{[0-9][0-9]:[0-9][0-9]}} {yellow} ; #nop highlight each timestamp for tells;
}

#nop restore yellow tell highlight
#alias {tellow}
{

#highlight {{[0-9][0-9]:[0-9][0-9]}} {yellow} ; #nop highlight each timestamp for tells
#HIGHLIGHT {Tell history:} {Yellow reverse underscore} {5} ;
#highlight {{[0-9][0-9]:[0-9][0-9]}} {yellow} ; #nop highlight each timestamp for tells

}

#PATHDIR {d} {u} {32}
#PATHDIR {e} {w} {2}
#PATHDIR {n} {s} {1}
#PATHDIR {ne} {sw} {3}
#PATHDIR {nw} {se} {9}
#PATHDIR {s} {n} {4}
#PATHDIR {se} {nw} {6}
#PATHDIR {sw} {ne} {12}
#PATHDIR {u} {d} {16}
#PATHDIR {w} {e} {8}

#SUBSTITUTE {GEE, what are we fighting then?} {STATUS: in combat} {5}

#TICKER {line} {#split} {3}
#TICKER           {tellhist}  {tellhist}  {3}

#NOP TICKER {Time} {#echo <acf>%t {\n\t\tTime:%I:%M:%S\tDate:%Y-%m-%d}} {5} ;


#TICKER {xp} {xp} {10}

#TICKER {sk} {sk} {75}

#nop turn off tellhist timer;
#alias untick {
#untick tellhist;
#NOP untick Time;
#untick xp;
#untick sk;
};


#nop enable tellhist timer;
#alias retick {

#TICKER           {tellhist}  {tellhist}  {3};
#NOP TICKER {Time} {#echo <acf>%t {Time:%I:%M:%S\nDate:%Y-%m-%d}} {10} ;
#TICKER {xp} {xp} {10};
#TICKER {sk} {sk} {75};
};


#VARIABLE {InChess} {1}
#VARIABLE {bioplasm} {86.18}



